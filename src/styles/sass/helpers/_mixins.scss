// -- DESCRIPTION --
// the order of the arguments is importent
// null is used for the default value
// default values are mentioned as arguments
// the last ones may be omitted if they are in the default state
// if an argument in default state is not the last one, then [null] must be used

@mixin display-flex ($row: row, $wrap: nowrap, $justify-content: flex-start, $align-items: stretch, $align-content: stretch) {
    display: flex;
    flex-flow: $row $wrap;
    justify-content: $justify-content;
    align-items: $align-items;
    align-content: $align-content;  
}

@mixin width-height ($width: inherit, $height: inherit) {
    width: $width;
    height: $height;
}

@mixin clearfix() {
    &::after {
      display: block;
      content: "";
      clear: both;
    }
}

@mixin changeBackground($c1, $c4) {
    @keyframes mouse-in {
        0%   {background-color: $c1;}
        100%  {background-color: $c4;}        
    }
    // @keyframes mouse-out {
    //     100%   {background-color: $color_1;}
    //     0%  {background-color: $color_4;}   
    // }
    &__nav-li:hover {
        cursor: pointer;
        animation-name: mouse-in;
        animation-duration: 1s;
        background-color: $c4;
        
    }
    // &__nav-link:hover:after {
    //     animation-name: mouse-in;
    //     animation-duration: 0.5s;
    // }
    // // pressed
    // &__nav-link:active {
    //     color: $color_0;
    //     // display: none;
    // }
}
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
    @font-face {
        font-family: $font-family;
        font-weight: $weight;
        font-style: $style;
        src: url('#{$file-path}.eot');
        src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype');
    }
}
@mixin animateButton($bg1, $bg2, $time:1s) {
    @keyframes button {
        0%   {background-color: darken($bg1, 20%);}
        100%  {background-color: $bg2;}        
    }
    &__button_animated_true:hover {
        cursor: pointer;
        animation-name: button;
        animation-duration: $time;
        background-color: $bg2;
        box-shadow:1px 1px 2px $bg2, 0 0 25px $bg2, 0 0 5px $bg2;
    }
    &__button_animated_true:active {
        background-color: lighten($bg2, 6.25%);
        color: $color_1;
    }
}
@mixin animateElement1($bg1, $bg2, $time:1s) {
    transition: all $time linear;    
    &:hover {
        cursor: pointer;
        background-color: $bg2;
        color: $color_1;
    }
    &:active {
        background-color: lighten($bg2, 10%);
    }
}
@mixin animateElement2($time:1s) {
    transition: all $time linear;    
    &:hover {
        padding:4em;
    }
}
@mixin animateElement3($time:1s) {
    transition: all $time linear;    
    &:hover {
        box-shadow: 0 0 40px rgba(0, 0, 0, .1) inset;
    }
}
@mixin linearGradient($top, $bottom){
    background: $top; /* Old browsers */
    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}
@mixin pseudoBottomBorder() {
    position: absolute;
    content: '';
    height: 4px;
    right: 0;
    left: 0;
    bottom: 0;    
}
@mixin borderBottomColor($color, $bottom : 0, $top : 0) {        
    &::after {
        background-color: $color;
        position: absolute;
        content: '';
        height: 4px;
        right: 0;
        left: 0;
        bottom: $bottom;
        top: $top;
    }
    &:hover::after {
        background-color: black;
        top: null;
        bottom: 0;
    }
}
@mixin toggleBackground($c1, $c2) {
    // @keyframes mouse-in {
    //     0%   {background-color: $c1;}
    //     100%  {background-color: $c2;}        
    // }
    // &__color_ + `#{$c1}`:hover {
    //     cursor: pointer;
    //     animation-name: mouse-in;
    //     animation-duration: 1s;
    //     background-color: $c2;
        
    // }
}